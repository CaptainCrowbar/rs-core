// This file is generated by the discover-tests script

#include "rs-core/unit-test.hpp"
#include <print>
#include <string>
#include <vector>

using namespace RS::UnitTest;

void test_rs_core_global_range_functions();
void test_rs_core_alias_constructors();
void test_rs_core_alias_conversions();
void test_rs_core_alias_arithmetic_operators();
void test_rs_core_alias_bitwise_operators();
void test_rs_core_alias_comparison_operators();
void test_rs_core_alias_range_access();
void test_rs_core_alias_string_functions();
void test_rs_core_alias_formatting();
void test_rs_core_alias_hashing();
void test_rs_core_arithmetic_parse_integers();
void test_rs_core_arithmetic_parse_integers_maybe();
void test_rs_core_arithmetic_try_parse_integers();
void test_rs_core_arithmetic_parse_floating_point();
void test_rs_core_arithmetic_parse_floating_point_maybe();
void test_rs_core_arithmetic_try_parse_floating_point();
void test_rs_core_arithmetic_euclidean_division();
void test_rs_core_arithmetic_gcd_lcm_int();
void test_rs_core_arithmetic_bitmask_functions();
void test_rs_core_arithmetic_checked_cast();
void test_rs_core_arithmetic_interpolation();
void test_rs_core_character_properties();
void test_rs_core_character_string_case_conversion();
void test_rs_core_constants();
void test_rs_core_enum_class();
void test_rs_core_enum_bitmask();
void test_rs_core_format_concepts();
void test_rs_core_format_automation();
void test_rs_core_hash_kernighan();
void test_rs_core_hash_mix();
void test_rs_core_hash_sip();
void test_rs_core_io_cstdio_class();
void test_rs_core_io_cstdio_byte_io();
void test_rs_core_io_cstdio_formatting();
void test_rs_core_io_cstdio_line_iterator();
void test_rs_core_io_string_buffer_class();
void test_rs_core_io_string_buffer_byte_io();
void test_rs_core_io_string_buffer_formatting();
void test_rs_core_io_string_buffer_line_iterator();
void test_rs_core_iterator_tags();
void test_rs_core_iterator_output_iterators();
void test_rs_core_iterator_input_iterators();
void test_rs_core_iterator_forward_iterators();
void test_rs_core_iterator_bidirectional_iterators();
void test_rs_core_iterator_random_access_iterators();
void test_rs_core_iterator_contiguous_iterators();
void test_rs_core_log_message();
void test_rs_core_log_context();
void test_rs_core_log_function_context();
void test_rs_core_markup_xml();
void test_rs_core_markup_html();
void test_rs_core_mp_integer_literals();
void test_rs_core_mp_integer_core_functions();
void test_rs_core_mp_integer_hash_set();
void test_rs_core_mp_integer_signed_arithmetic();
void test_rs_core_mp_integer_signed_division();
void test_rs_core_mp_integer_signed_large_arithmetic();
void test_rs_core_mp_integer_signed_conversion_from_integer();
void test_rs_core_mp_integer_signed_conversion_to_string();
void test_rs_core_mp_integer_signed_conversion_from_string();
void test_rs_core_mp_integer_unsigned_arithmetic();
void test_rs_core_mp_integer_unsigned_bit_operations();
void test_rs_core_mp_integer_unsigned_construction_from_list();
void test_rs_core_mp_integer_unsigned_conversion_from_integer();
void test_rs_core_mp_integer_unsigned_conversion_to_string();
void test_rs_core_mp_integer_unsigned_conversion_from_string();
void test_rs_core_random_pcg_engine();
void test_rs_core_random_device_64_engine();
void test_rs_core_random_uniform_integer();
void test_rs_core_random_bernoulli_distribution();
void test_rs_core_random_uniform_real();
void test_rs_core_random_choice();
void test_rs_core_random_weighted_choice();
void test_rs_core_random_shuffle();
void test_rs_core_rational_int_construction();
void test_rs_core_rational_int_properties();
void test_rs_core_rational_int_arithmetic();
void test_rs_core_rational_int_comparison();
void test_rs_core_rational_int_formatting();
void test_rs_core_rational_int_parsing();
void test_rs_core_rational_mp_integer_construction();
void test_rs_core_rational_mp_integer_properties();
void test_rs_core_rational_mp_integer_arithmetic();
void test_rs_core_rational_mp_integer_comparison();
void test_rs_core_rational_mp_integer_formatting();
void test_rs_core_rational_mp_integer_parsing();
void test_rs_core_scope_guard();
void test_rs_core_terminal_escape_codes();
void test_rs_core_typename_static();
void test_rs_core_typename_dynamic();
void test_rs_core_uuid_class();
void test_rs_core_uuid_random();
void test_rs_core_version();

int main(int argc, char** argv) {

    main_args = std::vector<std::string>(argv + 1, argv + argc);
    std::println("");
    std::println("{}Running unit tests{}", xhead, xreset);
    std::println("{}{}{}", xrule, rule, xreset);

    call_me_maybe(test_rs_core_global_range_functions, "test_rs_core_global_range_functions");
    call_me_maybe(test_rs_core_alias_constructors, "test_rs_core_alias_constructors");
    call_me_maybe(test_rs_core_alias_conversions, "test_rs_core_alias_conversions");
    call_me_maybe(test_rs_core_alias_arithmetic_operators, "test_rs_core_alias_arithmetic_operators");
    call_me_maybe(test_rs_core_alias_bitwise_operators, "test_rs_core_alias_bitwise_operators");
    call_me_maybe(test_rs_core_alias_comparison_operators, "test_rs_core_alias_comparison_operators");
    call_me_maybe(test_rs_core_alias_range_access, "test_rs_core_alias_range_access");
    call_me_maybe(test_rs_core_alias_string_functions, "test_rs_core_alias_string_functions");
    call_me_maybe(test_rs_core_alias_formatting, "test_rs_core_alias_formatting");
    call_me_maybe(test_rs_core_alias_hashing, "test_rs_core_alias_hashing");
    call_me_maybe(test_rs_core_arithmetic_parse_integers, "test_rs_core_arithmetic_parse_integers");
    call_me_maybe(test_rs_core_arithmetic_parse_integers_maybe, "test_rs_core_arithmetic_parse_integers_maybe");
    call_me_maybe(test_rs_core_arithmetic_try_parse_integers, "test_rs_core_arithmetic_try_parse_integers");
    call_me_maybe(test_rs_core_arithmetic_parse_floating_point, "test_rs_core_arithmetic_parse_floating_point");
    call_me_maybe(test_rs_core_arithmetic_parse_floating_point_maybe, "test_rs_core_arithmetic_parse_floating_point_maybe");
    call_me_maybe(test_rs_core_arithmetic_try_parse_floating_point, "test_rs_core_arithmetic_try_parse_floating_point");
    call_me_maybe(test_rs_core_arithmetic_euclidean_division, "test_rs_core_arithmetic_euclidean_division");
    call_me_maybe(test_rs_core_arithmetic_gcd_lcm_int, "test_rs_core_arithmetic_gcd_lcm_int");
    call_me_maybe(test_rs_core_arithmetic_bitmask_functions, "test_rs_core_arithmetic_bitmask_functions");
    call_me_maybe(test_rs_core_arithmetic_checked_cast, "test_rs_core_arithmetic_checked_cast");
    call_me_maybe(test_rs_core_arithmetic_interpolation, "test_rs_core_arithmetic_interpolation");
    call_me_maybe(test_rs_core_character_properties, "test_rs_core_character_properties");
    call_me_maybe(test_rs_core_character_string_case_conversion, "test_rs_core_character_string_case_conversion");
    call_me_maybe(test_rs_core_constants, "test_rs_core_constants");
    call_me_maybe(test_rs_core_enum_class, "test_rs_core_enum_class");
    call_me_maybe(test_rs_core_enum_bitmask, "test_rs_core_enum_bitmask");
    call_me_maybe(test_rs_core_format_concepts, "test_rs_core_format_concepts");
    call_me_maybe(test_rs_core_format_automation, "test_rs_core_format_automation");
    call_me_maybe(test_rs_core_hash_kernighan, "test_rs_core_hash_kernighan");
    call_me_maybe(test_rs_core_hash_mix, "test_rs_core_hash_mix");
    call_me_maybe(test_rs_core_hash_sip, "test_rs_core_hash_sip");
    call_me_maybe(test_rs_core_io_cstdio_class, "test_rs_core_io_cstdio_class");
    call_me_maybe(test_rs_core_io_cstdio_byte_io, "test_rs_core_io_cstdio_byte_io");
    call_me_maybe(test_rs_core_io_cstdio_formatting, "test_rs_core_io_cstdio_formatting");
    call_me_maybe(test_rs_core_io_cstdio_line_iterator, "test_rs_core_io_cstdio_line_iterator");
    call_me_maybe(test_rs_core_io_string_buffer_class, "test_rs_core_io_string_buffer_class");
    call_me_maybe(test_rs_core_io_string_buffer_byte_io, "test_rs_core_io_string_buffer_byte_io");
    call_me_maybe(test_rs_core_io_string_buffer_formatting, "test_rs_core_io_string_buffer_formatting");
    call_me_maybe(test_rs_core_io_string_buffer_line_iterator, "test_rs_core_io_string_buffer_line_iterator");
    call_me_maybe(test_rs_core_iterator_tags, "test_rs_core_iterator_tags");
    call_me_maybe(test_rs_core_iterator_output_iterators, "test_rs_core_iterator_output_iterators");
    call_me_maybe(test_rs_core_iterator_input_iterators, "test_rs_core_iterator_input_iterators");
    call_me_maybe(test_rs_core_iterator_forward_iterators, "test_rs_core_iterator_forward_iterators");
    call_me_maybe(test_rs_core_iterator_bidirectional_iterators, "test_rs_core_iterator_bidirectional_iterators");
    call_me_maybe(test_rs_core_iterator_random_access_iterators, "test_rs_core_iterator_random_access_iterators");
    call_me_maybe(test_rs_core_iterator_contiguous_iterators, "test_rs_core_iterator_contiguous_iterators");
    call_me_maybe(test_rs_core_log_message, "test_rs_core_log_message");
    call_me_maybe(test_rs_core_log_context, "test_rs_core_log_context");
    call_me_maybe(test_rs_core_log_function_context, "test_rs_core_log_function_context");
    call_me_maybe(test_rs_core_markup_xml, "test_rs_core_markup_xml");
    call_me_maybe(test_rs_core_markup_html, "test_rs_core_markup_html");
    call_me_maybe(test_rs_core_mp_integer_literals, "test_rs_core_mp_integer_literals");
    call_me_maybe(test_rs_core_mp_integer_core_functions, "test_rs_core_mp_integer_core_functions");
    call_me_maybe(test_rs_core_mp_integer_hash_set, "test_rs_core_mp_integer_hash_set");
    call_me_maybe(test_rs_core_mp_integer_signed_arithmetic, "test_rs_core_mp_integer_signed_arithmetic");
    call_me_maybe(test_rs_core_mp_integer_signed_division, "test_rs_core_mp_integer_signed_division");
    call_me_maybe(test_rs_core_mp_integer_signed_large_arithmetic, "test_rs_core_mp_integer_signed_large_arithmetic");
    call_me_maybe(test_rs_core_mp_integer_signed_conversion_from_integer, "test_rs_core_mp_integer_signed_conversion_from_integer");
    call_me_maybe(test_rs_core_mp_integer_signed_conversion_to_string, "test_rs_core_mp_integer_signed_conversion_to_string");
    call_me_maybe(test_rs_core_mp_integer_signed_conversion_from_string, "test_rs_core_mp_integer_signed_conversion_from_string");
    call_me_maybe(test_rs_core_mp_integer_unsigned_arithmetic, "test_rs_core_mp_integer_unsigned_arithmetic");
    call_me_maybe(test_rs_core_mp_integer_unsigned_bit_operations, "test_rs_core_mp_integer_unsigned_bit_operations");
    call_me_maybe(test_rs_core_mp_integer_unsigned_construction_from_list, "test_rs_core_mp_integer_unsigned_construction_from_list");
    call_me_maybe(test_rs_core_mp_integer_unsigned_conversion_from_integer, "test_rs_core_mp_integer_unsigned_conversion_from_integer");
    call_me_maybe(test_rs_core_mp_integer_unsigned_conversion_to_string, "test_rs_core_mp_integer_unsigned_conversion_to_string");
    call_me_maybe(test_rs_core_mp_integer_unsigned_conversion_from_string, "test_rs_core_mp_integer_unsigned_conversion_from_string");
    call_me_maybe(test_rs_core_random_pcg_engine, "test_rs_core_random_pcg_engine");
    call_me_maybe(test_rs_core_random_device_64_engine, "test_rs_core_random_device_64_engine");
    call_me_maybe(test_rs_core_random_uniform_integer, "test_rs_core_random_uniform_integer");
    call_me_maybe(test_rs_core_random_bernoulli_distribution, "test_rs_core_random_bernoulli_distribution");
    call_me_maybe(test_rs_core_random_uniform_real, "test_rs_core_random_uniform_real");
    call_me_maybe(test_rs_core_random_choice, "test_rs_core_random_choice");
    call_me_maybe(test_rs_core_random_weighted_choice, "test_rs_core_random_weighted_choice");
    call_me_maybe(test_rs_core_random_shuffle, "test_rs_core_random_shuffle");
    call_me_maybe(test_rs_core_rational_int_construction, "test_rs_core_rational_int_construction");
    call_me_maybe(test_rs_core_rational_int_properties, "test_rs_core_rational_int_properties");
    call_me_maybe(test_rs_core_rational_int_arithmetic, "test_rs_core_rational_int_arithmetic");
    call_me_maybe(test_rs_core_rational_int_comparison, "test_rs_core_rational_int_comparison");
    call_me_maybe(test_rs_core_rational_int_formatting, "test_rs_core_rational_int_formatting");
    call_me_maybe(test_rs_core_rational_int_parsing, "test_rs_core_rational_int_parsing");
    call_me_maybe(test_rs_core_rational_mp_integer_construction, "test_rs_core_rational_mp_integer_construction");
    call_me_maybe(test_rs_core_rational_mp_integer_properties, "test_rs_core_rational_mp_integer_properties");
    call_me_maybe(test_rs_core_rational_mp_integer_arithmetic, "test_rs_core_rational_mp_integer_arithmetic");
    call_me_maybe(test_rs_core_rational_mp_integer_comparison, "test_rs_core_rational_mp_integer_comparison");
    call_me_maybe(test_rs_core_rational_mp_integer_formatting, "test_rs_core_rational_mp_integer_formatting");
    call_me_maybe(test_rs_core_rational_mp_integer_parsing, "test_rs_core_rational_mp_integer_parsing");
    call_me_maybe(test_rs_core_scope_guard, "test_rs_core_scope_guard");
    call_me_maybe(test_rs_core_terminal_escape_codes, "test_rs_core_terminal_escape_codes");
    call_me_maybe(test_rs_core_typename_static, "test_rs_core_typename_static");
    call_me_maybe(test_rs_core_typename_dynamic, "test_rs_core_typename_dynamic");
    call_me_maybe(test_rs_core_uuid_class, "test_rs_core_uuid_class");
    call_me_maybe(test_rs_core_uuid_random, "test_rs_core_uuid_random");
    call_me_maybe(test_rs_core_version, "test_rs_core_version");

    std::println("{}{}{}", xrule, rule, xreset);

    if (failures == 0) {
        std::println("{}OK - all tests passed{}", xpass, xreset);
    } else {
        std::println("{}*** Test failures: {}{}", xfail, failures, xreset);
    }

    std::println("");

    return failures;

}
